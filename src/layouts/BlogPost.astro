---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title = 'Default Title', description = 'Default Description', posted, updatedDate, heroImage } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
	</head>
	<body>
		<Header />
		<main>
			<article class="contNoticias">
				<div class="cabecera">
					<div class="contInfoBLog">
						<div class="date">
							<FormattedDate date={posted} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<h1>{title}</h1>
					</div>
					<div class="hero-image">
						{heroImage && <img src={heroImage} alt="" />}
					</div>
				</div>
				<br>
				<hr />
				<div class="textoLargo">
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>

<style>

	.contNoticias{
		position: relative;
		width: 96%;
		max-width: 1280px;
		height: fit-content;
		margin-bottom: 200px;
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
		-background-color: gray;
	}

	.cabecera{
		width: 100%;
		height: fit-content;
		position: relative;
		margin-top: 50px;
		-background-color: yellow;
	}

	.contInfoBLog{
		height: 100%;
		width: 100%;
		position: absolute;
		z-index: 3;
		display: flex;
		flex-direction: column;
		justify-content: end;
		align-items: start;
	}

	.hero-image {
		width: 100%;
		height: 500px;
		overflow: hidden;
		top: 0px;
		border-radius: 1rem;
		display: flex;
		justify-content: center;
		align-items: center;
		box-shadow: var(--box-shadow);
		border: 4px solid white;
		
	}

	.hero-image img {
		width: 100%;
		display: block;
		margin: 0 auto;
	}

	h1 {
		text-align: left;
		line-height: 1;
		color: white;
		text-shadow: rgb(42, 42, 41) 1px 0 10px;
		padding-left: 2rem;
		padding-bottom: 20px;
	}

	.date {
		padding-left: 2rem;
		color: white;
		text-align: left;
		text-shadow: rgb(42, 42, 41) 1px 0 10px;
	}

	.last-updated-on {
		font-style: italic;
	}

	.textoLargo{
		width: 96%;
	}

	@media (min-width: 768px) and (max-width: 1024px) {
		
		.hero-image {
			width: 100%;
			height: 450px;
		}
	}

	@media (min-width: 401px) and (max-width: 767px) {
		.hero-image {
			width: 100%;
			height: auto;
		}

		h1 {
			text-align: left;
			line-height: 1.1;
			color: white;
			text-shadow: rgb(42, 42, 41) 1px 0 10px;
			padding-left: 2rem;
			padding-bottom: 20px;
			font-size: 2em;
		}

		.date {
			font-size: 0.6em;
			padding-left: 2rem;
			color: white;
			text-align: left;
			text-shadow: rgb(42, 42, 41) 1px 0 10px;
		}

		.hero-image {
			border: 2px solid white;
			
		}
	}
	@media (min-width: 0px) and (max-width: 401px) {
		.hero-image {
			width: 100%;
			height: auto;
		}

		h1 {
			text-align: left;
			line-height: 1.1;
			color: white;
			text-shadow: rgb(42, 42, 41) 1px 0 10px;
			padding-left: 2rem;
			padding-bottom: 20px;
			font-size: 1em;
		}

		.date {
			font-size: 0.6em;
			padding-left: 2rem;
			color: white;
			text-align: left;
			text-shadow: rgb(42, 42, 41) 1px 0 10px;
		}

		.hero-image {
			border: 2px solid white;
			
		}
	}


</style>